name: 'Publish Linux Arm builds'
on:
  workflow_dispatch:
  push:
    branches: [release]

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: [aarch64, armv7l]
        include:
          - arch: aarch64
            cpu: cortex-a72
            base_image: https://dietpi.com/downloads/images/DietPi_RPi5-ARMv8-Bookworm.img.xz
            appimage: aarch64
          - arch: armv7l
            cpu: cortex-a53
            base_image: https://dietpi.com/downloads/images/DietPi_RPi-ARMv7-Bookworm.img.xz
            appimage: armhf

    steps:
      - uses: actions/checkout@v4

      - name: Cache rust build artifacts
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          cache-on-failure: true

      # 关键修复：使用最新的可用版本（v2.7.0是当前确认存在的稳定版）
      - name: Build app on Arm runner
        uses: pguyot/arm-runner-action@v2.7.0
        with:
          base_image: ${{ matrix.base_image }}
          cpu: ${{ matrix.cpu }}
          bind_mount_repository: true
          bind_mount_path: /github/workspace
          image_additional_mb: 15360
          optimize_image: no
          setup: |
            apt-get update && apt-get install -y qemu-user-static
          commands: |
            export HOME=/root
            export CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse
            
            apt-get update -y --allow-releaseinfo-change
            apt-get install -y --no-install-recommends \
              libwebkit2gtk-4.1-dev build-essential libssl-dev \
              libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev \
              patchelf libfuse2 file nodejs
            
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            . "$HOME/.cargo/env"
            
            npm install
            RUST_LOG=debug npm run tauri build -- --verbose

      - name: Get app version
        run: echo "APP_VERSION=$(jq -r .version src-tauri/tauri.conf.json)" >> $GITHUB_ENV

      - name: Upload AppImage bundle
        uses: actions/upload-artifact@v4
        with:
          name: AppImage-${{ matrix.arch }}
          path: ${{ github.workspace }}/src-tauri/target/release/bundle/appimage/*_${{ env.APP_VERSION }}_${{ matrix.appimage }}.AppImage
          compression-level: 6
